// <auto-generated />
using System;
using Ingeco.Repository.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ingeco.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ingeco.Entity.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionFiscal");

                    b.Property<string>("Nombre");

                    b.Property<string>("RUC");

                    b.Property<string>("RazonSocial");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Ingeco.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DomicilioFiscal");

                    b.Property<string>("NombreComercial");

                    b.Property<string>("RUC");

                    b.Property<string>("RazonSocial");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Ingeco.Entity.CostoGasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DescuentoId");

                    b.Property<bool>("Inicio");

                    b.Property<float>("Monto");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("DescuentoId");

                    b.ToTable("CostosGastos");
                });

            modelBuilder.Entity("Ingeco.Entity.Descuento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BancoId");

                    b.Property<int>("FacturaId");

                    b.Property<DateTime>("Fecha");

                    b.Property<float>("MontoDescontado");

                    b.Property<float>("TCEA");

                    b.Property<float>("TEA");

                    b.Property<float>("Tasa");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("FacturaId");

                    b.ToTable("Descuentos");
                });

            modelBuilder.Entity("Ingeco.Entity.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<string>("Correlativo");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<DateTime>("FechaVenta");

                    b.Property<float>("Monto");

                    b.Property<string>("Serie");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Ingeco.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos");

                    b.Property<string>("Contraseña");

                    b.Property<string>("Email");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("Nombres");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Ingeco.Entity.CostoGasto", b =>
                {
                    b.HasOne("Ingeco.Entity.Descuento")
                        .WithMany("CostosGastos")
                        .HasForeignKey("DescuentoId");
                });

            modelBuilder.Entity("Ingeco.Entity.Descuento", b =>
                {
                    b.HasOne("Ingeco.Entity.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ingeco.Entity.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ingeco.Entity.Factura", b =>
                {
                    b.HasOne("Ingeco.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ingeco.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
